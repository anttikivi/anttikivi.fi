---
import faviconColorSrc from "@/assets/favicon-color.png";
import icoFaviconSrc from "@/assets/favicon.ico";
import faviconSrc from "@/assets/favicon.svg";
import { useTranslations } from "@/i18n";
import locales, { defaultLocale, type Locale } from "@/locales";
import { getRoute, getRouteKey } from "@/routes";
import { getImage } from "astro:assets";

interface Props {
  description?: string;
  title?: string | undefined;
}

const t = useTranslations("site", Astro.currentLocale as Locale);
const { description = t("description"), title } = Astro.props;
const isIndex =
  (Astro.currentLocale === defaultLocale && Astro.url.pathname === "/") ||
  (Astro.currentLocale !== defaultLocale &&
    Astro.url.pathname === `/${Astro.currentLocale}/`);
const svgFavicon = await getImage({ format: "svg", src: faviconSrc });
const icoFavicon = await getImage({
  src: icoFaviconSrc,
  width: 16,
  height: 16,
});
const favicon32 = await getImage({
  format: "png",
  src: faviconColorSrc,
  width: 32,
  height: 32,
});
const favicon16 = await getImage({
  format: "png",
  src: faviconColorSrc,
  width: 16,
  height: 16,
});
const favicon180 = await getImage({
  format: "png",
  src: faviconColorSrc,
  width: 180,
  height: 180,
});
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  {
    isIndex ? (
      // prettier-ignore
      <title>{t("title")} - {t("subtitle")}</title>
    ) : (
      // prettier-ignore
      <title>{title} - {t("title")}</title>
    )
  }
  <meta name="description" content={description} />

  <link href={svgFavicon.src} rel="icon" type="image/svg+xml" />
  <link href={icoFavicon.src} rel="alternate icon" sizes="16x16" />
  <link href={favicon32.src} rel="icon" sizes="32x32" type="image/png" />
  <link href={favicon16.src} rel="icon" sizes="16x16" type="image/png" />
  <link href={favicon180.src} rel="apple-touch-icon" sizes="180x180" />

  <link href={`${Astro.site?.origin}${Astro.url.pathname}`} rel="canonical" />
  {
    locales.map((locale) => (
      <link
        rel="alternate"
        href={`${Astro.site?.origin}${getRoute(locale, getRouteKey(Astro.url.pathname))}`}
        hreflang={locale}
      />
    ))
  }
  <link
    rel="alternate"
    href={`${Astro.site?.origin}${getRoute("fi", getRouteKey(Astro.url.pathname))}`}
    hreflang="x-default"
  />

  <link rel="sitemap" href="/sitemap-index.xml" />
</head>
