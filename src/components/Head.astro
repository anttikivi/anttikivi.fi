---
import { useTranslations } from "@/i18n";
import locales, { defaultLocale, type Locale } from "@/locales";
import { getRoute, getRouteKey } from "@/routes";

interface Props {
  description?: string;
  title?: string | undefined;
}

const t = useTranslations("site", Astro.currentLocale as Locale);

const { description = t("description"), title } = Astro.props;

const isIndex =
  (Astro.currentLocale === defaultLocale && Astro.url.pathname === "/") ||
  (Astro.currentLocale !== defaultLocale &&
    Astro.url.pathname === `/${Astro.currentLocale}/`);
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  {
    isIndex ? (
      // prettier-ignore
      <title>{t("title")} - {t("subtitle")}</title>
    ) : (
      // prettier-ignore
      <title>{title} - {t("title")}</title>
    )
  }

  <meta name="description" content={description} />

  <link href={`${Astro.site?.origin}${Astro.url.pathname}`} rel="canonical" />

  {
    locales.map((locale) => (
      <link
        rel="alternate"
        href={`${Astro.site?.origin}${getRoute(locale, getRouteKey(Astro.url.pathname))}`}
        hreflang={locale}
      />
    ))
  }
  <link
    rel="alternate"
    href={`${Astro.site?.origin}${getRoute("fi", getRouteKey(Astro.url.pathname))}`}
    hreflang="x-default"
  />

  <link rel="sitemap" href="/sitemap-index.xml" />
</head>
