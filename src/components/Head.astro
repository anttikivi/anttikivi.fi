---
import type { ImageMetadata } from 'astro';
import { getImage } from 'astro:assets';
import locales, { defaultLocale, fullLocales } from '../data/locales';
import type { Locale } from '../types';
import { isRouteHome } from '../utils';
import {
  getLocaleFromUrl,
  getRouteFromUrl,
  useTranslatedPath,
  useTranslations,
} from '../utils/i18n';

interface Props {
  description?: string;
  image?: ImageMetadata;
  imageAlt?: string;
  title: string;
}

const { description, image, imageAlt, title } = Astro.props;

const titleSeparator = ' - ';

const locale = getLocaleFromUrl(Astro.url);
const t = useTranslations(locale);
const translatePath = useTranslatedPath(locale);

const isHome = isRouteHome(Astro.url.pathname);

const siteTitle = t('site.title');

const metaTitle = isHome
  ? `${siteTitle}`
  : `${title}${titleSeparator}${siteTitle}`;
const metaDescription = description || t('site.description');

const metaImageUrl = new URL('/opengraph-image.png', Astro.site);

metaImageUrl.searchParams.append('title', title);
metaImageUrl.searchParams.append('description', metaDescription);

const imageWidth = 1200;
const imageHeight = 630;

const metaImage = image
  ? (
      await getImage({
        src: image,
        format: 'png',
        height: imageHeight,
        width: imageWidth,
      })
    ).src
  : metaImageUrl.toString();
const metaImageAlt = image ? imageAlt : t('site.imageAlt');

const canonicalUrl = new URL(Astro.url.pathname, Astro.site);
const currentRoute = getRouteFromUrl(Astro.url);
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="generator" content={Astro.generator} />

  <title>{metaTitle}</title>

  <meta name="description" content={metaDescription} />

  {/* FIXME: Make the icons have a transparent background. */}
  <link href="/favicon.svg" rel="icon" type="image/svg+xml" />
  <link href="/favicon.ico" rel="alternate icon" sizes="16x16" />
  <link href="/favicon-32x32.png" rel="icon" sizes="32x32" type="image/png" />
  <link href="/favicon-16x16.png" rel="icon" sizes="16x16" type="image/png" />

  <link href="/apple-touch-icon.png" rel="apple-touch-icon" sizes="180x180" />

  <link href={canonicalUrl} rel="canonical" />

  <meta content={metaTitle} property="og:title" />
  <meta content={metaDescription} property="og:description" />
  <meta content="website" property="og:type" />
  <meta content={siteTitle} property="og:site_name" />

  <meta content={metaImage} property="og:image" />
  <meta content="image/png" property="og:image:type" />
  <meta content={metaImageAlt} property="og:image:alt" />
  <meta content="1200" property="og:image:width" />
  <meta content="630" property="og:image:height" />

  <meta content={canonicalUrl} property="og:url" />

  <meta content={fullLocales[locale]} property="og:locale" />

  <meta name="twitter:card" content="summary" />
  {/* FIXME: Don't use hard-coded values for the Twitter usernames. */}
  <meta name="twitter:site" content="@anttikiwi" />
  <meta name="twitter:creator" content="@anttikiwi" />
  <meta name="twitter:image" content={metaImage} />
  <meta property="twitter:title" content={metaTitle} />
  <meta property="twitter:description" content={metaDescription} />

  {/* Create the alternative locales. */}
  {
    Object.keys(locales).map((localeEntry) => {
      if (localeEntry === locale) {
        return null;
      }

      return (
        <meta
          content={fullLocales[localeEntry as Locale]}
          property="og:locale:alternate"
        />
      );
    })
  }

  {/* Create links to the alternative locales of the page. */}
  {
    Object.keys(locales).map((localeEntry) => {
      if (isHome) {
        return (
          <link
            href={
              new URL(
                localeEntry === defaultLocale ? '/' : `${localeEntry}/`,
                Astro.site,
              )
            }
          />
        );
      }

      return (
        <link
          href={
            new URL(
              translatePath(
                `/${currentRoute}`,
                localeEntry as keyof typeof locales,
              ),
              Astro.site,
            )
          }
          hreflang={localeEntry}
          rel="alternate"
        />
      );
    })
  }

  <link rel="stylesheet" href="https://use.typekit.net/jqe6omz.css" />

  <script
    defer
    data-domain="anttikivi.fi"
    src="https://analytics.visiosto.fi/js/script.js"></script>
</head>
